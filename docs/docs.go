// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Suporte NiteLog",
            "email": "sample@email.com"
        },
        "license": {
            "name": "MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/meetings": {
            "post": {
                "description": "Registra uma nova reunião com código único",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "Cria uma nova reunião",
                "parameters": [
                    {
                        "description": "Data da Reunião",
                        "name": "meeting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meeting.CreateMeetingRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/meeting.DuplicatedMeetingErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meetings/:id": {
            "get": {
                "description": "Procura reunião por id especifico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "Procura reunião por id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID da reunião",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meetings/add-attendance": {
            "post": {
                "description": "Adiciona usuário à lista de presença",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendance"
                ],
                "summary": "Registra presença em reunião",
                "parameters": [
                    {
                        "description": "Dados da presença",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meeting.AddUserAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meetings/by-date/:date": {
            "get": {
                "description": "Procura reunião por data especifica",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting"
                ],
                "summary": "Procura reunião por data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Data no estilo: 2024-10-26",
                        "name": "date",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Meeting"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meetings/delete/:id": {
            "delete": {
                "description": "Deleta uma reunião do banco de dados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meeting_admin"
                ],
                "summary": "Deleta uma reunião",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id da reunião",
                        "name": "meeting_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/meetings/finish-attendance": {
            "post": {
                "description": "Finaliza a presença usuário do usuário",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "attendance"
                ],
                "summary": "Finaliza presença em reunião",
                "parameters": [
                    {
                        "description": "Dados da presença",
                        "name": "attendance",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/meeting.FinishUserAttendanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retorna lista com todos os usuários",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user_admin"
                ],
                "summary": "Retorna todos os usuários",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Cadastra um novo usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Cria um novo usuário",
                "parameters": [
                    {
                        "description": "Dados do Usuário",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "get": {
                "description": "Procura usuário por id especifico",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Procura usuário por id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/delete/:id": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deleta um usuário do banco de dados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Deleta um usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id do usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Gera token JWT para usuário válido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Autentica um usuário",
                "parameters": [
                    {
                        "description": "Credenciais",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/update/:id": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Atualiza um usuário no sistema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Atualiza um usuário",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id do usuário",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Novos Dados do Usuário",
                        "name": "user_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/util.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/util.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "meeting.AddUserAttendanceRequest": {
            "type": "object",
            "required": [
                "date",
                "registration"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-10-26"
                },
                "registration": {
                    "type": "string",
                    "example": "8854652123"
                }
            }
        },
        "meeting.CreateMeetingRequest": {
            "type": "object",
            "required": [
                "date"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-10-26"
                }
            }
        },
        "meeting.DuplicatedMeetingErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Meeting already exists for this date"
                },
                "existing_meeting": {
                    "$ref": "#/definitions/models.Meeting"
                }
            }
        },
        "meeting.FinishUserAttendanceRequest": {
            "type": "object",
            "required": [
                "date",
                "registration"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-10-26"
                },
                "registration": {
                    "type": "string",
                    "example": "8854652123"
                }
            }
        },
        "models.Attendance": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string",
                    "example": "2025-05-14T22:12:34.1Z"
                },
                "registration": {
                    "type": "string",
                    "example": "8854652123"
                },
                "start_time": {
                    "type": "string",
                    "example": "2025-05-14T20:19:02.1Z"
                }
            }
        },
        "models.Meeting": {
            "type": "object",
            "properties": {
                "attendance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attendance"
                    }
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-05-14T20:14:04.245Z"
                },
                "date": {
                    "type": "string",
                    "example": "2024-10-26"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-05-15T09:45:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "a1b2c3d4e5f6g7h8i9j0k1"
                },
                "meeting_code": {
                    "type": "string",
                    "example": "qE522Af8"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2025-05-14T20:14:04.245Z"
                },
                "deleted_at": {
                    "type": "string",
                    "example": "2025-05-15T09:45:00Z"
                },
                "email": {
                    "type": "string",
                    "example": "sample@email.com"
                },
                "id": {
                    "type": "string",
                    "example": "d4e5f6a7b8c9d0e1f2a3b4c5"
                },
                "name": {
                    "type": "string",
                    "example": "John Testes"
                },
                "registration": {
                    "type": "string",
                    "example": "5612879465"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updated_at": {
                    "type": "string",
                    "example": "2026-05-14T12:18:34.245Z"
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "registration"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "sample@email.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Testes"
                },
                "password": {
                    "type": "string",
                    "example": "safePassword123#"
                },
                "registration": {
                    "type": "string",
                    "example": "8854652123"
                }
            }
        },
        "user.LoginUserRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.LoginUserResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "sample@email.com"
                },
                "name": {
                    "type": "string",
                    "example": "Mary"
                },
                "password": {
                    "type": "string",
                    "example": "safePassword123#"
                },
                "registration": {
                    "type": "string",
                    "example": "8854652123"
                }
            }
        },
        "util.ErrorResponse": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "util.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Sample status message"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "nitelogdev.discloud.app",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "NITELog API",
	Description:      "API para gestão do Nite",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
